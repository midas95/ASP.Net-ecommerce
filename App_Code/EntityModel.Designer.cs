//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_Category_Product", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(eCommerceDBModel.Category), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Product), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_MetaFeature_Feature", "MetaFeature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.MetaFeature), "Feature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Feature), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_ProductID_Feature", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.Product), "Feature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Feature), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_Customer_Cart", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.Customer), "Cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Cart), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_Product_Cart", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.Product), "Cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Cart), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_Customer_Order", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.Customer), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Order), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_Product_Order", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.Product), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Order), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_Customer_Review", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.Customer), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Review), true)]
[assembly: EdmRelationshipAttribute("eCommerceDBModel", "FK_Product_Review", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eCommerceDBModel.Product), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eCommerceDBModel.Review), true)]

#endregion

namespace eCommerceDBModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class eCommerceDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new eCommerceDBEntities object using the connection string found in the 'eCommerceDBEntities' section of the application configuration file.
        /// </summary>
        public eCommerceDBEntities() : base("name=eCommerceDBEntities", "eCommerceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eCommerceDBEntities object.
        /// </summary>
        public eCommerceDBEntities(string connectionString) : base(connectionString, "eCommerceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eCommerceDBEntities object.
        /// </summary>
        public eCommerceDBEntities(EntityConnection connection) : base(connection, "eCommerceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feature> Features
        {
            get
            {
                if ((_Features == null))
                {
                    _Features = base.CreateObjectSet<Feature>("Features");
                }
                return _Features;
            }
        }
        private ObjectSet<Feature> _Features;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaFeature> MetaFeatures
        {
            get
            {
                if ((_MetaFeatures == null))
                {
                    _MetaFeatures = base.CreateObjectSet<MetaFeature>("MetaFeatures");
                }
                return _MetaFeatures;
            }
        }
        private ObjectSet<MetaFeature> _MetaFeatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cart> Carts
        {
            get
            {
                if ((_Carts == null))
                {
                    _Carts = base.CreateObjectSet<Cart>("Carts");
                }
                return _Carts;
            }
        }
        private ObjectSet<Cart> _Carts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Review> Reviews
        {
            get
            {
                if ((_Reviews == null))
                {
                    _Reviews = base.CreateObjectSet<Review>("Reviews");
                }
                return _Reviews;
            }
        }
        private ObjectSet<Review> _Reviews;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Features EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeatures(Feature feature)
        {
            base.AddObject("Features", feature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaFeatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaFeatures(MetaFeature metaFeature)
        {
            base.AddObject("MetaFeatures", metaFeature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarts(Cart cart)
        {
            base.AddObject("Carts", cart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviews(Review review)
        {
            base.AddObject("Reviews", review);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="Cart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cart object.
        /// </summary>
        /// <param name="cartID">Initial value of the CartID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Cart CreateCart(global::System.Int32 cartID, global::System.Int32 customerID, global::System.Int32 productID, global::System.Int32 quantity)
        {
            Cart cart = new Cart();
            cart.CartID = cartID;
            cart.CustomerID = customerID;
            cart.ProductID = productID;
            cart.Quantity = quantity;
            return cart;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CartID
        {
            get
            {
                return _CartID;
            }
            set
            {
                if (_CartID != value)
                {
                    OnCartIDChanging(value);
                    ReportPropertyChanging("CartID");
                    _CartID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CartID");
                    OnCartIDChanged();
                }
            }
        }
        private global::System.Int32 _CartID;
        partial void OnCartIDChanging(global::System.Int32 value);
        partial void OnCartIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Customer_Cart", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Cart", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Cart", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Cart", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Cart", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Product_Cart", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Cart", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Cart", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Cart", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("eCommerceDBModel.FK_Product_Cart", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String categoryName)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.CategoryName = categoryName;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryDescription
        {
            get
            {
                return _CategoryDescription;
            }
            set
            {
                OnCategoryDescriptionChanging(value);
                ReportPropertyChanging("CategoryDescription");
                _CategoryDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryDescription");
                OnCategoryDescriptionChanged();
            }
        }
        private global::System.String _CategoryDescription;
        partial void OnCategoryDescriptionChanging(global::System.String value);
        partial void OnCategoryDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Category_Product", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("eCommerceDBModel.FK_Category_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("eCommerceDBModel.FK_Category_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="customerName">Initial value of the CustomerName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="contactNumber">Initial value of the ContactNumber property.</param>
        /// <param name="userType">Initial value of the UserType property.</param>
        public static Customer CreateCustomer(global::System.Int32 customerID, global::System.String customerName, global::System.String userName, global::System.String password, global::System.String address, global::System.String email, global::System.String contactNumber, global::System.String userType)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.CustomerName = customerName;
            customer.UserName = userName;
            customer.Password = password;
            customer.Address = address;
            customer.email = email;
            customer.ContactNumber = contactNumber;
            customer.UserType = userType;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sex
        {
            get
            {
                return _sex;
            }
            set
            {
                OnsexChanging(value);
                ReportPropertyChanging("sex");
                _sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sex");
                OnsexChanged();
            }
        }
        private global::System.String _sex;
        partial void OnsexChanging(global::System.String value);
        partial void OnsexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.String _UserType;
        partial void OnUserTypeChanging(global::System.String value);
        partial void OnUserTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Customer_Cart", "Cart")]
        public EntityCollection<Cart> Carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("eCommerceDBModel.FK_Customer_Cart", "Cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("eCommerceDBModel.FK_Customer_Cart", "Cart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Customer_Order", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("eCommerceDBModel.FK_Customer_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("eCommerceDBModel.FK_Customer_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Customer_Review", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("eCommerceDBModel.FK_Customer_Review", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("eCommerceDBModel.FK_Customer_Review", "Review", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="Feature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feature object.
        /// </summary>
        /// <param name="featureID">Initial value of the FeatureID property.</param>
        /// <param name="metaFeatureID">Initial value of the MetaFeatureID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static Feature CreateFeature(global::System.Int32 featureID, global::System.Int32 metaFeatureID, global::System.Int32 productID)
        {
            Feature feature = new Feature();
            feature.FeatureID = featureID;
            feature.MetaFeatureID = metaFeatureID;
            feature.ProductID = productID;
            return feature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeatureID
        {
            get
            {
                return _FeatureID;
            }
            set
            {
                if (_FeatureID != value)
                {
                    OnFeatureIDChanging(value);
                    ReportPropertyChanging("FeatureID");
                    _FeatureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeatureID");
                    OnFeatureIDChanged();
                }
            }
        }
        private global::System.Int32 _FeatureID;
        partial void OnFeatureIDChanging(global::System.Int32 value);
        partial void OnFeatureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaFeatureID
        {
            get
            {
                return _MetaFeatureID;
            }
            set
            {
                OnMetaFeatureIDChanging(value);
                ReportPropertyChanging("MetaFeatureID");
                _MetaFeatureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaFeatureID");
                OnMetaFeatureIDChanged();
            }
        }
        private global::System.Int32 _MetaFeatureID;
        partial void OnMetaFeatureIDChanging(global::System.Int32 value);
        partial void OnMetaFeatureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeatureDescription
        {
            get
            {
                return _FeatureDescription;
            }
            set
            {
                OnFeatureDescriptionChanging(value);
                ReportPropertyChanging("FeatureDescription");
                _FeatureDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeatureDescription");
                OnFeatureDescriptionChanged();
            }
        }
        private global::System.String _FeatureDescription;
        partial void OnFeatureDescriptionChanging(global::System.String value);
        partial void OnFeatureDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_MetaFeature_Feature", "MetaFeature")]
        public MetaFeature MetaFeature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaFeature>("eCommerceDBModel.FK_MetaFeature_Feature", "MetaFeature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaFeature>("eCommerceDBModel.FK_MetaFeature_Feature", "MetaFeature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetaFeature> MetaFeatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaFeature>("eCommerceDBModel.FK_MetaFeature_Feature", "MetaFeature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetaFeature>("eCommerceDBModel.FK_MetaFeature_Feature", "MetaFeature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_ProductID_Feature", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_ProductID_Feature", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_ProductID_Feature", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_ProductID_Feature", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("eCommerceDBModel.FK_ProductID_Feature", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="MetaFeature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaFeature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaFeature object.
        /// </summary>
        /// <param name="metaFeatureID">Initial value of the MetaFeatureID property.</param>
        /// <param name="featureName">Initial value of the FeatureName property.</param>
        public static MetaFeature CreateMetaFeature(global::System.Int32 metaFeatureID, global::System.String featureName)
        {
            MetaFeature metaFeature = new MetaFeature();
            metaFeature.MetaFeatureID = metaFeatureID;
            metaFeature.FeatureName = featureName;
            return metaFeature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaFeatureID
        {
            get
            {
                return _MetaFeatureID;
            }
            set
            {
                if (_MetaFeatureID != value)
                {
                    OnMetaFeatureIDChanging(value);
                    ReportPropertyChanging("MetaFeatureID");
                    _MetaFeatureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaFeatureID");
                    OnMetaFeatureIDChanged();
                }
            }
        }
        private global::System.Int32 _MetaFeatureID;
        partial void OnMetaFeatureIDChanging(global::System.Int32 value);
        partial void OnMetaFeatureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeatureName
        {
            get
            {
                return _FeatureName;
            }
            set
            {
                OnFeatureNameChanging(value);
                ReportPropertyChanging("FeatureName");
                _FeatureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FeatureName");
                OnFeatureNameChanged();
            }
        }
        private global::System.String _FeatureName;
        partial void OnFeatureNameChanging(global::System.String value);
        partial void OnFeatureNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_MetaFeature_Feature", "Feature")]
        public EntityCollection<Feature> Features
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feature>("eCommerceDBModel.FK_MetaFeature_Feature", "Feature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feature>("eCommerceDBModel.FK_MetaFeature_Feature", "Feature", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="dateOrdered">Initial value of the DateOrdered property.</param>
        public static Order CreateOrder(global::System.Int32 orderID, global::System.Int32 customerID, global::System.Int32 productID, global::System.DateTime dateOrdered)
        {
            Order order = new Order();
            order.OrderID = orderID;
            order.CustomerID = customerID;
            order.ProductID = productID;
            order.DateOrdered = dateOrdered;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOrdered
        {
            get
            {
                return _DateOrdered;
            }
            set
            {
                OnDateOrderedChanging(value);
                ReportPropertyChanging("DateOrdered");
                _DateOrdered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOrdered");
                OnDateOrderedChanged();
            }
        }
        private global::System.DateTime _DateOrdered;
        partial void OnDateOrderedChanging(global::System.DateTime value);
        partial void OnDateOrderedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Customer_Order", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Order", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Order", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Order", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Order", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Product_Order", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Order", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Order", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Order", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("eCommerceDBModel.FK_Product_Order", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="productPrice">Initial value of the ProductPrice property.</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.String productName, global::System.Decimal productPrice)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.ProductName = productName;
            product.ProductPrice = productPrice;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductDescription
        {
            get
            {
                return _ProductDescription;
            }
            set
            {
                OnProductDescriptionChanging(value);
                ReportPropertyChanging("ProductDescription");
                _ProductDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductDescription");
                OnProductDescriptionChanged();
            }
        }
        private global::System.String _ProductDescription;
        partial void OnProductDescriptionChanging(global::System.String value);
        partial void OnProductDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductImageURL
        {
            get
            {
                return _ProductImageURL;
            }
            set
            {
                OnProductImageURLChanging(value);
                ReportPropertyChanging("ProductImageURL");
                _ProductImageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductImageURL");
                OnProductImageURLChanged();
            }
        }
        private global::System.String _ProductImageURL;
        partial void OnProductImageURLChanging(global::System.String value);
        partial void OnProductImageURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ProductPrice
        {
            get
            {
                return _ProductPrice;
            }
            set
            {
                OnProductPriceChanging(value);
                ReportPropertyChanging("ProductPrice");
                _ProductPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPrice");
                OnProductPriceChanged();
            }
        }
        private global::System.Decimal _ProductPrice;
        partial void OnProductPriceChanging(global::System.Decimal value);
        partial void OnProductPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Int32> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Category_Product", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eCommerceDBModel.FK_Category_Product", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eCommerceDBModel.FK_Category_Product", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eCommerceDBModel.FK_Category_Product", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("eCommerceDBModel.FK_Category_Product", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_ProductID_Feature", "Feature")]
        public EntityCollection<Feature> Features
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feature>("eCommerceDBModel.FK_ProductID_Feature", "Feature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feature>("eCommerceDBModel.FK_ProductID_Feature", "Feature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Product_Cart", "Cart")]
        public EntityCollection<Cart> Carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("eCommerceDBModel.FK_Product_Cart", "Cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("eCommerceDBModel.FK_Product_Cart", "Cart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Product_Order", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("eCommerceDBModel.FK_Product_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("eCommerceDBModel.FK_Product_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Product_Review", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("eCommerceDBModel.FK_Product_Review", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("eCommerceDBModel.FK_Product_Review", "Review", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eCommerceDBModel", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Review object.
        /// </summary>
        /// <param name="reviewID">Initial value of the ReviewID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="reviewTitle">Initial value of the ReviewTitle property.</param>
        /// <param name="reviewDescription">Initial value of the ReviewDescription property.</param>
        /// <param name="reviewDate">Initial value of the ReviewDate property.</param>
        public static Review CreateReview(global::System.Int32 reviewID, global::System.Int32 customerID, global::System.Int32 productID, global::System.String reviewTitle, global::System.String reviewDescription, global::System.DateTime reviewDate)
        {
            Review review = new Review();
            review.ReviewID = reviewID;
            review.CustomerID = customerID;
            review.ProductID = productID;
            review.ReviewTitle = reviewTitle;
            review.ReviewDescription = reviewDescription;
            review.ReviewDate = reviewDate;
            return review;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReviewID
        {
            get
            {
                return _ReviewID;
            }
            set
            {
                if (_ReviewID != value)
                {
                    OnReviewIDChanging(value);
                    ReportPropertyChanging("ReviewID");
                    _ReviewID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReviewID");
                    OnReviewIDChanged();
                }
            }
        }
        private global::System.Int32 _ReviewID;
        partial void OnReviewIDChanging(global::System.Int32 value);
        partial void OnReviewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int32> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReviewTitle
        {
            get
            {
                return _ReviewTitle;
            }
            set
            {
                OnReviewTitleChanging(value);
                ReportPropertyChanging("ReviewTitle");
                _ReviewTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReviewTitle");
                OnReviewTitleChanged();
            }
        }
        private global::System.String _ReviewTitle;
        partial void OnReviewTitleChanging(global::System.String value);
        partial void OnReviewTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReviewDescription
        {
            get
            {
                return _ReviewDescription;
            }
            set
            {
                OnReviewDescriptionChanging(value);
                ReportPropertyChanging("ReviewDescription");
                _ReviewDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReviewDescription");
                OnReviewDescriptionChanged();
            }
        }
        private global::System.String _ReviewDescription;
        partial void OnReviewDescriptionChanging(global::System.String value);
        partial void OnReviewDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReviewDate
        {
            get
            {
                return _ReviewDate;
            }
            set
            {
                OnReviewDateChanging(value);
                ReportPropertyChanging("ReviewDate");
                _ReviewDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReviewDate");
                OnReviewDateChanged();
            }
        }
        private global::System.DateTime _ReviewDate;
        partial void OnReviewDateChanging(global::System.DateTime value);
        partial void OnReviewDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Customer_Review", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Review", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Review", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Review", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("eCommerceDBModel.FK_Customer_Review", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eCommerceDBModel", "FK_Product_Review", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Review", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Review", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("eCommerceDBModel.FK_Product_Review", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("eCommerceDBModel.FK_Product_Review", "Product", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
